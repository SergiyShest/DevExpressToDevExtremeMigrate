@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
	Layout = "_LayoutEmpty";
}

<div style="display:flex;flex-direction:column;align-items:flex-start;align-content:flex-start;align-self:stretch">
	<h1></h1>

	<div id="app" style="display: flex;flex-direction: column;width: 450px;">
		<div id="items"  class="grid-container">
		    <kf-number text = 'Id' v-model = 'Item.Id'  ></kf-number>
<kf-input text = 'FirstName' v-model = 'Item.FirstName'  ></kf-input>
<kf-input text = 'LastName' v-model = 'Item.LastName'  ></kf-input>
<kf-input text = 'Email' v-model = 'Item.Email'  ></kf-input>
<kf-input text = 'Hospital' v-model = 'Item.Hospital'  ></kf-input>
<kf-input text = 'PropS1' v-model = 'Item.PropS1'  ></kf-input>
<kf-input text = 'PropS2' v-model = 'Item.PropS2'  ></kf-input>
<kf-input text = 'PropS3' v-model = 'Item.PropS3'  ></kf-input>
<kf-input text = 'PropS4' v-model = 'Item.PropS4'  ></kf-input>
<kf-input text = 'PropS5' v-model = 'Item.PropS5'  ></kf-input>

		</div>

		<div style="display:flex;flex-direction:row;">

			<kf-button id="saveButton" v-if="mode!='view'"		 v-on:click.native="SaveClick"	text="Coхранить"		image="copy"  ></kf-button>
			<kf-button id="closeButton" v-if="mode!='view'"	     v-on:click.native="CloseClick"	text="Закрыть"			image="delete" style="margin-left:auto"  ></kf-button>
		</div>
	</div>
</div>

<script type="module" >

    $(window).on("load",function () {
	@Html.Raw(TempData["StartupScript"])
		});
		 let Mode = '@ViewBag.Mode'
	     let Id = '@ViewBag.Id';
	   // load components ( remove unused please)
	import { KfField, KfInput, KfDate, KfSelect, KfNumber, KfCheck, KfTextarea, KfText, KfButton, KfGridLookUp } from '/js/vue3Components.js';

		import { baseMixin } from '/js/BaseMixin.js';
		const { ref } = Vue;
	        const app = Vue.createApp({
		 mixins: [baseMixin],
		 data() {
			 return {
				 Item: {  }
			 }
		 }
		 ,
		 methods: {
			 Get() {
				 const pathEnd = "/Contract/DkCard/Get?id="+Id;
				 this.FetchJson( pathEnd,this.Ok)
			 },
			 Ok(data) {
				 console.log(data)
				 this.Item = data;
			 },
			 SaveClick() {
                          alert('SaveClick')
			 },

			CloseClick() {
			 
		  }
		 },
		 mounted: function () {
          this.Get()


		 }
	 });
	// Registering components ( remove unused please)
	  app.component('kf-field', KfField);
	  app.component('kf-button', KfButton);
	  app.component('kf-input', KfInput);
	  app.component('kf-date', KfDate);
	  app.component('kf-select', KfSelect);
	  app.component('kf-number', KfNumber);
	  app.component('kf-check', KfCheck);
	  app.component('kf-textarea', KfTextarea);
	  app.component('kf-text', KfText);
	 app.component('kf-lookup', KfGridLookUp);
	// Mounting Vue app
	const vue_ = app.mount('#app');
</script>
