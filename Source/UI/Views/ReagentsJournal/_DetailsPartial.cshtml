@using Sasha.Lims.WebUI.Infrastructure.ViewModelHelpers
@using Sasha.Lims.DataAccess.Entities.Constants
@using Sasha.Lims.WebUI.Controllers
@using Sasha.Lims.WebUI.Models

@model ReagentJournalViewModel

@{
	object objEditMode = ViewBag?.EditMode;
	ReagentJournalType editMode = objEditMode is ReagentJournalType ? (ReagentJournalType)objEditMode : objEditMode != null && Enum.TryParse(objEditMode.ToString(), out editMode) ? editMode : ReagentJournalType.Receiving;
}

@Html.DevExpress().FormLayout(settings => {
	settings.Name = "FormEditReagent";

	settings.SettingsItems.ShowCaption = DefaultBoolean.True;
	settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Left;

	settings.Items.AddGroupItem(group => {
		group.GroupBoxDecoration = GroupBoxDecoration.None;
		group.ColCount = 2;
		
		group.Items.AddGroupItemForVmField(m => m.ReagentId).SetNestedContent(() => Html.RenderPartial("~/Views/Reagents/_ComboBoxPartial.cshtml", new ViewDataDictionary(Model?.ReagentId)));
		group.Items.AddGroupItemForVmField(m => m.Quantity);
		group.Items.AddGroupItemForVmField(m => m.LotNumber);
		group.Items.AddGroupItemForVmField(m => m.ExpirationDate);

		if (editMode != ReagentJournalType.Receiving)
			group.Items.AddGroupItemForVmField(m => m.ProcessId).SetNestedContent(() => Html.RenderPartial("~/Views/ProcessList/_ComboBoxPartial.cshtml", new ViewDataDictionary(Model?.ProcessId)));
		
		group.Items.Add(i => {
			i.Caption = "Location:";
			//i.FieldName = "LocationId";
			i.Name = "EditingLocation";
			i.NestedExtension().DropDownEdit(cb =>
			{
				cb.Properties.ClientSideEvents.Init = "onInitTreeViewLocations";
				cb.Properties.ClientSideEvents.DropDown = "onDropDownTreeViewLocations";
				cb.Properties.NullText = "(No Selection)";
				cb.ReadOnly = true;
				cb.SetDropDownWindowTemplateContent(c => Html.RenderAction("LocationsTreeListPartial", "Samples", new { selectedId = Model?.LocationId }));
			});
		});
	});

	settings.Items.AddGroupItem(group =>
	{
		group.ClientVisible = false;
		group.Items.Add(m => m.LocationId, i => { });
	});

	settings.Items.AddSaveCancelButtons(ReagentsJournalController.GridViewName, Model);
}).GetHtml()

@Html.DevExpress().ValidationSummary().GetHtml()