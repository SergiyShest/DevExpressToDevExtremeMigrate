@using System.Drawing
@using System.Web.UI.WebControls
@using DevExpress.Utils
@using DevExpress.Web
@using DevExpress.Web.Mvc
@using DevExpress.Web.Mvc.UI
@using DevExpress.XtraPrinting.Native

@using Sasha.Lims.Core.Helpers
@using Sasha.Lims.DataAccess.Entities.Constants

@using Sasha.Lims.WebUI.Infrastructure.Helpers
@model IQueryable<Sasha.Lims.DataAccess.Entities.Entity.vPatient>

@functions {
	private void FillContextMenuItems(object sender, ASPxGridViewContextMenuEventArgs e)
	{
		if (e.MenuType == GridViewContextMenuType.Rows)
		{
			var item = e.Items.FindByCommand(GridViewContextMenuCommand.DeleteRow);
			e.Items.Remove(item);
			item = e.Items.FindByCommand(GridViewContextMenuCommand.NewRow);
			e.Items.Remove(item);
			item = e.Items.FindByCommand(GridViewContextMenuCommand.Refresh);
			e.Items.Remove(item);
			item = e.Items.FindByCommand(GridViewContextMenuCommand.EditRow);
			e.Items.Remove(item);
			item = e.Items.Add("Edit", "Edit");
			item.Image.Url = "~/Content/Images/edit.svg";
			item = e.Items.Add("Samples", "Samples");
			item.Image.Url = "~/Content/Images/aliquoting.svg";
		}
	}
}
@{
	var gridView = Html.DevExpress().GridView(settings =>
	{

		SettingHelper.InitAdvancedGridSettings(settings, "PatientJournal", ViewContext);
		//settings.CallbackRouteValues = new { Controller = "PatientJournal", Action = "CallbackRouteValues"};
		//	patientFirstName = ViewBag.patientFirstName,
		//	patientLastName = ViewBag.patientLastName,
		//	patientDateOfBirth = ViewBag.patientDateOfBirth,
		//	patientEmail = ViewBag.patientEmail,
		//	patientNo = ViewBag.patientNo
		//};
		settings.KeyFieldName = "id";
		settings.SettingsContextMenu.EnableRowMenu = DefaultBoolean.True;
		settings.FillContextMenuItems = FillContextMenuItems;
		settings.ClientSideEvents.ContextMenuItemClick = "onContextMenuItemClick";

		settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;//все колонки сжимаются
		settings.SettingsPager.PageSize = 50;
		settings.Columns.Add(columnSettings =>
		{
			columnSettings.FieldName = "id";
			columnSettings.Caption = "Id";
			columnSettings.MinWidth = 50;
			columnSettings.Width = 50;
		});
		settings.Columns.Add(columnSettings =>
		{
			columnSettings.FieldName = "no";
			columnSettings.Caption = "No";
			columnSettings.MinWidth = 50;
			columnSettings.Width = 50;
		});

		settings.Columns.Add("firstName", "First name");
		settings.Columns.Add("lastName", "Last name");
		settings.Columns.Add(columnSettings =>
		{
			columnSettings.FieldName = "dob";
			columnSettings.Caption = "Date of birth";
			columnSettings.MinWidth = 100;
			columnSettings.Width = 100;
			columnSettings.PropertiesEdit.DisplayFormatString = "MM/dd/yyyy";

		});
		settings.Columns.Add(columnSettings =>
		{
			columnSettings.FieldName = "email";
			columnSettings.Caption = "Email";
			columnSettings.MinWidth = 150;
			columnSettings.Width = 150;

		});
		settings.Columns.Add(columnSettings =>
		{
			columnSettings.FieldName = "sendEmail";
			columnSettings.Caption = "Send Email";
			columnSettings.MinWidth = 50;
			columnSettings.Width = 50;
			columnSettings.ColumnType = MVCxGridViewColumnType.CheckBox;
		});

		settings.DataBound = (s, e) =>
		{
			if (ViewData["filterExpr"] != null)

				((ASPxGridView)s).FilterExpression = ViewData["filterExpr"].ToString();
		};

		settings.Columns.Add("hospital", "Hospital");
		settings.Columns.Add("doctor", "Doctor");
		settings.Columns.Add("SampleCount", "Samples Count");
		SettingHelper.AddCustomColumnsAdv(settings, TableType.Patient);
		Html.AddColmmentCountColumn(settings, false); //Comment
		Html.AddFilesCountColumn(settings, false); //Files
		SettingHelper.AddCommandColumn(settings);
		settings.ClientSideEvents.SelectionChanged = "onGridViewSelectionChanged";
		settings.ClientSideEvents.BeginCallback = "onGridViewBeginCallback";
		settings.ClientSideEvents.EndCallback = "onGridViewEndCallback";
		settings.ClientSideEvents.CustomizationWindowCloseUp = "onGridCustomizationWindowCloseUp";
		settings.ClientSideEvents.RowDblClick = "onRowDblClick";
		settings.ClientSideEvents.Init = "onGridViewInit";
		settings.ClientSideEvents.FocusedRowChanged = "onFocusedRowChanged";


	});
	if (Model == null)
	{
		@gridView.GetHtml()
	}
	else
	{
		@gridView.BindToEF(string.Empty, string.Empty, (s, e) =>
		{
			e.QueryableSource = Model;
			e.KeyExpression = "id";
		}, (s, e) =>
		{
			// Handle internal exception
			var mess = e.Exception.GetAllMessages();
			mess = "<div style='color:red'>" + mess + "</div>";
			ViewContext.Writer.Write(mess); //пишу ошибку прямо на экран
		}).GetHtml()
	}
}
