@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
	Layout = "_Layout";
}


<div style="display:flex;flex-direction:column;align-items:flex-start;align-content:flex-start;align-self:stretch">
	<h1>$MainHeader$</h1>

	<div id="app" style="display: flex;flex-direction: column;width: 450px;">
		<div style="display: flex;align-items:center">
			<div style="width: 100px;margin-left:15px">$DateHeader$:</div>
			oт<input id="d1From" type="date" v-model="from" style="margin:3px">
			до<input id="d1To" type="date" v-model="to" style="margin:3px">
			<kf-button id="findButton"  v-if="mode!='view'" v-on:click.native="find" text="Найти" image="find"></kf-button>
		</div>

		<div style="display:flex;flex-direction:row;">
			<kf-button id="editButton" v-if="mode!='view'"		v-on:click.native="showClick"	text=Просмотр"	image="edit"></kf-button>
		</div>
	</div>
	<div id="grid" />
</div>

    <script type="module">

	 let Mode = '@ViewBag.Mode'
	 let focusedRowKey = null;
	 let storageKey = '$storageKey$';
     import { KfButton } from '/js/vue3Components.js';
     import { baseMixin } from '/js/BaseMixin.js';
     const { ref } = Vue;

	 function setDataSource(from,to) {
		 const dataSource = DevExpress.data.AspNet.createStore({
			 key: "Id",
			 loadUrl: document.location.origin + "$journalControllerPath$/Get",
			 loadParams: { from: from, to: to }
		 });
		 var grid = $("#grid").dxDataGrid("instance");
		 grid.option("dataSource", dataSource);
	 }

	function OnFocusedRowChanged(e) {
		focusedRowKey = e.component.option('focusedRowKey');
	}

  $("#grid").dxDataGrid({
	    onRowClick: onRowClick,
        stateStoring: {
            storageKey: storageKey,
        },
        "export": {//выгрузка в excel
            enabled: true,
            fileName: "$HeaderReport$",
            allowExportSelectedData: true
        },
        focusedRowEnabled: true,
        onFocusedRowChanged: OnFocusedRowChanged,
        columns:[
$columns$
		]

    });

	  const app = Vue.createApp({
		 mixins: [baseMixin],
		 data() {
			 return {
				 from: null,
				 to: null
			 }
		 }
		 ,
		 methods: {
            find() {
				 localStorage.setItem(storageKey + 'dateFrom', this.from);
				 localStorage.setItem(storageKey + 'dateTo', this.to);
                 setDataSource(this.from,this.to);
			 }

		
			 showClick() {
				if (checkItem(focusedRowKey)) {
					xPopup('Карточка $Header$', '$cardControllerPath$/Index?id=' + focusedRowKey  , 1024, 916);
				}

			}
		  }
		 },
		 mounted: function () {

	let fr = localStorage.getItem(storageKey + 'dateFrom');
			if (fr != 'null') this.from = fr;

			let to = localStorage.getItem(storageKey + 'dateTo');
			if (to != 'null') this.to = to;
			
			this.find()
		 }
	 });

	  // Registering components
      app.component('kf-button', KfButton);
	  const vue_ = app.mount('#app');

	 function onRowClick(e) {
        var component = e.component,
            prevClickTime = component.lastClickTime;
        component.lastClickTime = new Date();
        if (prevClickTime && (component.lastClickTime - prevClickTime < 300)) {
           vue_.editClick()
        }
    }


</script>
